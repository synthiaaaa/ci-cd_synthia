name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:   # permet de lancer manuellement le workflow

jobs:
  build-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: TP4

    steps:
      # 1. Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Setup Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # 3. Upgrade pip
      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      # 4. Install dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt

      # 5. Run lint
      - name: Lint code
        run: python -m flake8 app tests

      # 6. Run tests with coverage
      - name: Run tests
        run: python -m pytest --cov=app --cov-fail-under=80

      # 7. Build Python package
      - name: Build Python package
        run: |
          pip install build
          python -m build

  docker-build-push:
    runs-on: ubuntu-latest
    needs: build-test
    defaults:
      run:
        working-directory: TP4

    steps:
      # 1. Checkout again
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Log in to GitHub Container Registry (GHCR)
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3. Build Docker image
      - name: Build Docker image
        run: |
          IMAGE_TAG=ghcr.io/${{ github.actor }}/ci-cd_synthia:latest
          docker build -t $IMAGE_TAG .

      # 4. Push Docker image to GHCR
      - name: Push Docker image
        run: |
          IMAGE_TAG=ghcr.io/${{ github.actor }}/ci-cd_synthia:latest
          docker push $IMAGE_TAG
