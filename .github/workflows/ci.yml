name: CI/CD

on:
  push:
    branches: [ main ]
    tags: [ "*" ]          # Déclenche aussi sur les tags (ex: v1.0.7)
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write          # Autorise le push vers GitHub Packages (GHCR)

jobs:
  build-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: TP4

    steps:
      # 1. Récupérer le code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Installer Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # 3. Mettre pip à jour
      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      # 4. Installer les dépendances
      - name: Install dependencies
        run: pip install -r requirements.txt

      # 5. Linter le code
      - name: Run flake8 lint
        run: python -m flake8 app tests

      # 6. Exécuter les tests avec couverture
      - name: Run tests with coverage
        run: python -m pytest --cov=app --cov-fail-under=80

  docker-build-push:
    runs-on: ubuntu-latest
    needs: build-test
    defaults:
      run:
        working-directory: TP4

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Login to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      # 3. Build Docker image
      - name: Build Docker image
        run: |
          IMAGE_TAG=$(git describe --tags --always)
          IMAGE_NAME=ghcr.io/synthiaaaa/ci-cd_synthia:$IMAGE_TAG
          docker build -t $IMAGE_NAME .

      # 4. Push Docker image
      - name: Push Docker image
        run: |
          IMAGE_TAG=$(git describe --tags --always)
          IMAGE_NAME=ghcr.io/synthiaaaa/ci-cd_synthia:$IMAGE_TAG
          docker push $IMAGE_NAME
