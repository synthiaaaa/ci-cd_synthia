name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:   # Permet de déclencher manuellement

jobs:
  build-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: TP4  # Toutes les commandes se font dans TP4

    steps:
      # 1. Récupérer le code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Installer Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # 3. Mettre pip à jour
      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      # 4. Installer les dépendances
      - name: Install dependencies
        run: pip install -r requirements.txt

      # 5. Linter le code
      - name: Run flake8 lint
        run: python -m flake8 app tests

      # 6. Exécuter les tests avec couverture
      - name: Run tests with coverage
        run: python -m pytest --cov=app --cov-fail-under=80

  docker-build-push:
    runs-on: ubuntu-latest
    needs: build-test   # Ne build Docker que si les tests passent
    defaults:
      run:
        working-directory: TP4

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Log in Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Build Docker image
      - name: Build Docker image
        run: |
          IMAGE_TAG=mon-utilitaire:$(git describe --tags --always)
          docker build -t $IMAGE_TAG .

      # 4. Tag Docker image pour Docker Hub
      - name: Tag Docker image
        run: |
          IMAGE_TAG=mon-utilitaire:$(git describe --tags --always)
          docker tag $IMAGE_TAG ${{ secrets.DOCKER_USERNAME }}/$IMAGE_TAG

      # 5. Push Docker image sur Docker Hub
      - name: Push Docker image
        run: |
          IMAGE_TAG=mon-utilitaire:$(git describe --tags --always)
          docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_TAG
